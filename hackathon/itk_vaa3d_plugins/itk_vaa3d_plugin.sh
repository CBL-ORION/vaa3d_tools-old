if [ "$#" = "0" ]; then echo "usage : `basename $0` <itk_example_cxx>"; exit 1; fi

file=$1
ft=`echo $file | sed "s/^.*\.//"`
func_name=itk`basename $file .$ft`

echo "create $func_name folder"
mkdir $func_name

echo "create $func_name/$file ..."
sed "s/main(/run_${func_name}(/" $file > $func_name/$file

echo "create $func_name/${func_name}.pro ..."
if [ "1" ] ; then 
echo ''
echo 'TEMPLATE	= lib'
echo 'CONFIG	+= qt plugin warn_off'
echo '#CONFIG	+= x86_64'
echo 'V3DMAINPATH = ../../../../../../v3d_external/v3d_main'
echo 'INCLUDEPATH	+= $$V3DMAINPATH/basic_c_fun'
echo ''
echo 'HEADERS	+= '${func_name}'_plugin.h'
echo ''
echo 'SOURCES	+= '${func_name}'_plugin.cpp'
echo 'SOURCES	+= $$V3DMAINPATH/basic_c_fun/v3d_message.cpp'
echo ''
echo 'SOURCES += '$file
echo ''
echo 'TARGET	= $$qtLibraryTarget('${func_name}')'
echo '#DESTDIR	= ~/Applications/v3d/plugins/'${func_name}'/'
echo ''
echo 'INCLUDEPATH += ITKIOFactoryRegistration'
echo 'DEFINES += ITK_IO_FACTORY_REGISTER_MANAGER'
echo ''
echo 'ITKDIR = /Users/xiaoh10/Local/Applications/ITK_BUILD'
echo 'ITKSOURCEDIR = /Users/xiaoh10/Local/Applications/InsightToolkit-4.0.0'
echo 'ITKLIBDIR = $$ITKDIR/lib'
echo ''
echo 'LIBS += -framework CoreFoundation'
echo ''
echo 'INCLUDEPATH +=  \'
echo '$$ITKDIR/Utilities/vxl/core \'
echo '$$ITKDIR/Utilities/vxl/vcl \'
echo '$$ITKDIR/Utilities/expat \'
echo '$$ITKDIR/Utilities/gdcm \'
echo '$$ITKDIR/Utilities/DICOMParser \'
echo '$$ITKDIR/Utilities \'
echo '$$ITKDIR/Modules/Core/Common \'
echo '$$ITKDIR/Modules/ThirdParty/VNL/src/vxl/vcl \'
echo '$$ITKDIR/Modules/ThirdParty/VNL/src/vxl/core \'
echo '$$ITKDIR/Modules/ThirdParty/TIFF/src/itktiff \'
echo '$$ITKDIR/Modules/ThirdParty/KWSys/src \'
echo '$$ITKDIR/Modules/ThirdParty/NrrdIO/src/NrrdIO \'
echo '$$ITKDIR \'
echo '$$ITKSOURCEDIR/Utilities/vxl/core \'
echo '$$ITKSOURCEDIR/Utilities/vxl/vcl \ '
echo '$$ITKSOURCEDIR/Utilities \'
echo '$$ITKSOURCEDIR/Utilities/nifti/znzlib \'
echo '$$ITKSOURCEDIR/Utilities/nifti/niftilib \ '
echo '$$ITKSOURCEDIR/Utilities/expat \'
echo '$$ITKSOURCEDIR/Utilities/DICOMParser \ '
echo '$$ITKSOURCEDIR/Utilities/NrrdIO \'
echo '$$ITKSOURCEDIR/Utilities/MetaIO \'
echo '$$ITKDIR/Modules/IO/ImageBase \'
echo '$$ITKSOURCEDIR/Code/SpatialObject \'
echo '$$ITKSOURCEDIR/Code/Numerics/NeuralNetworks \ '
echo '$$ITKSOURCEDIR/Code/Numerics/Statistics \'
echo '$$ITKSOURCEDIR/Code/Numerics/FEM \'
echo '$$ITKSOURCEDIR/Code/IO \'
echo '$$ITKSOURCEDIR/Code/Numerics \ '
echo '$$ITKSOURCEDIR/Code/Common \'
echo '$$ITKSOURCEDIR/Code/BasicFilters \'
echo '$$ITKSOURCEDIR/Code/Algorithms \'
echo '$$ITKSOURCEDIR/Modules/Core/Common/include \'
echo '$$ITKSOURCEDIR/Modules/ThirdParty/VNL/src/vxl/vcl \'
echo '$$ITKSOURCEDIR/Modules/ThirdParty/VNL/src/vxl/core \'
echo '$$ITKSOURCEDIR/Modules/IO/ImageBase/include \'
echo '$$ITKSOURCEDIR/Modules/Filtering/AnisotropicSmoothing/include \'
echo '$$ITKSOURCEDIR/Modules/Filtering/AntiAlias/include \'
echo '$$ITKSOURCEDIR/Modules/Filtering/BiasCorrection/include \'
echo '$$ITKSOURCEDIR/Modules/Filtering/BinaryMathematicalMorphology/include \'
echo '$$ITKSOURCEDIR/Modules/Filtering/Colormap/include \'
echo '$$ITKSOURCEDIR/Modules/Filtering/Convolution/include \'
echo '$$ITKSOURCEDIR/Modules/Filtering/CurvatureFlow/include \'
echo '$$ITKSOURCEDIR/Modules/Filtering/DiffusionTensorImage/include \'
echo '$$ITKSOURCEDIR/Modules/Filtering/DisplacementField/include \'
echo '$$ITKSOURCEDIR/Modules/Filtering/DistanceMap/include \'
echo '$$ITKSOURCEDIR/Modules/Filtering/FFT/include \'
echo '$$ITKSOURCEDIR/Modules/Filtering/FastMarching/include \'
echo '$$ITKSOURCEDIR/Modules/Filtering/ImageCompare/include \'
echo '$$ITKSOURCEDIR/Modules/Filtering/ImageCompose/include \'
echo '$$ITKSOURCEDIR/Modules/Filtering/ImageFeature/include \'
echo '$$ITKSOURCEDIR/Modules/Filtering/ImageFilterBase/include \'
echo '$$ITKSOURCEDIR/Modules/Filtering/ImageFusion/include \'
echo '$$ITKSOURCEDIR/Modules/Filtering/ImageGradient/include \'
echo '$$ITKSOURCEDIR/Modules/Filtering/ImageGrid/include \'
echo '$$ITKSOURCEDIR/Modules/Filtering/ImageIntensity/include \'
echo '$$ITKSOURCEDIR/Modules/Filtering/ImageLabel/include \'
echo '$$ITKSOURCEDIR/Modules/Filtering/ImageSource/include \'
echo '$$ITKSOURCEDIR/Modules/Filtering/ImageStatistics/include \'
echo '$$ITKSOURCEDIR/Modules/Filtering/LabelMap/include \'
echo '$$ITKSOURCEDIR/Modules/Filtering/MathematicalMorphology/include \'
echo '$$ITKSOURCEDIR/Modules/Filtering/Path/include \'
echo '$$ITKSOURCEDIR/Modules/Filtering/QuadEdgeMeshFiltering/include \'
echo '$$ITKSOURCEDIR/Modules/Filtering/Smoothing/include \'
echo '$$ITKSOURCEDIR/Modules/Filtering/SpatialFunction/include \'
echo '$$ITKSOURCEDIR/Modules/Filtering/Thresholding/include \'
echo '$$ITKSOURCEDIR/Modules/Segmentation/BioCell/include \'
echo '$$ITKSOURCEDIR/Modules/Segmentation/Classifiers/include \'
echo '$$ITKSOURCEDIR/Modules/Segmentation/ConnectedComponents/include \'
echo '$$ITKSOURCEDIR/Modules/Segmentation/DeformableMesh/include \'
echo '$$ITKSOURCEDIR/Modules/Segmentation/KLMRegionGrowing/include \'
echo '$$ITKSOURCEDIR/Modules/Segmentation/LabelVoting/include \'
echo '$$ITKSOURCEDIR/Modules/Segmentation/LevelSets/include \'
echo '$$ITKSOURCEDIR/Modules/Segmentation/LevelSetsv4/include \'
echo '$$ITKSOURCEDIR/Modules/Segmentation/LevelSetsv4Visualization/include \'
echo '$$ITKSOURCEDIR/Modules/Segmentation/MarkovRandomFieldsClassifiers/include \'
echo '$$ITKSOURCEDIR/Modules/Segmentation/RegionGrowing/include \'
echo '$$ITKSOURCEDIR/Modules/Segmentation/SignedDistanceFunction/include \'
echo '$$ITKSOURCEDIR/Modules/Segmentation/Voronoi/include \'
echo '$$ITKSOURCEDIR/Modules/Segmentation/Watersheds/include \'
echo '$$ITKSOURCEDIR/Modules/Registration/Common/include \'
echo '$$ITKSOURCEDIR/Modules/Registration/Metricsv4/include \'
echo '$$ITKSOURCEDIR/Modules/Registration/RegistrationMethodsv4/include \'
echo '$$ITKSOURCEDIR/Modules/Registration/FEM/include \'
echo '$$ITKSOURCEDIR/Modules/Registration/PDEDeformable/include \'
echo '$$ITKSOURCEDIR/Modules/Core/FiniteDifference/include \'
echo '$$ITKSOURCEDIR/Modules/Core/Transform/include \'
echo '$$ITKSOURCEDIR/Modules/Core/ImageFunction/include \'
echo '$$ITKSOURCEDIR/Modules/Core/Mesh/include \'
echo '$$ITKSOURCEDIR/Modules/Core/SpatialObjects/include \'
echo '$$ITKSOURCEDIR/Modules/Core/ImageAdaptors/include \'
echo '$$ITKSOURCEDIR/Modules/Compatibility/Deprecated/include \'
echo '$$ITKSOURCEDIR/Modules/Numerics/Optimizers/include \'
echo '$$ITKSOURCEDIR/Modules/Numerics/Statistics/include \'
echo '$$ITKSOURCEDIR/Modules/Numerics/FEM/include \'
echo '$$ITKSOURCEDIR/Modules/IO/NRRD/include \'
echo '$$ITKSOURCEDIR/Modules/IO/PNG/include \'
echo '$$ITKSOURCEDIR/Modules/ThirdParty/NrrdIO/src/NrrdIO \'
echo '$$ITKSOURCEDIR/Modules/IO/TransformBase/include/ \'
echo '$$ITKSOURCEDIR/'
echo ''
echo ''
echo 'LIBS += \'
echo '$$ITKLIBDIR/libitksys-4.0.a  \'
echo '$$ITKLIBDIR/libitkvnl_algo-4.0.a  \'
echo '$$ITKLIBDIR/libitkvnl-4.0.a  \'
echo '$$ITKLIBDIR/libitkv3p_netlib-4.0.a  \'
echo '$$ITKLIBDIR/libITKCommon-4.0.a  \'
echo '$$ITKLIBDIR/libitkNetlibSlatec-4.0.a  \'
echo '$$ITKLIBDIR/libITKStatistics-4.0.a  \'
echo '$$ITKLIBDIR/libITKIOImageBase-4.0.a  \'
echo '$$ITKLIBDIR/libITKIOBMP-4.0.a  \'
echo '$$ITKLIBDIR/libITKIOBioRad-4.0.a  \'
echo '$$ITKLIBDIR/libITKEXPAT-4.0.a  \'
echo '$$ITKLIBDIR/libitkopenjpeg-4.0.a  \'
echo '$$ITKLIBDIR/libitkzlib-4.0.a  \'
echo '$$ITKLIBDIR/libitkgdcmDICT-4.0.a  \'
echo '$$ITKLIBDIR/libitkgdcmMSFF-4.0.a  \'
echo '$$ITKLIBDIR/libITKIOGDCM-4.0.a  \'
echo '$$ITKLIBDIR/libITKIOGIPL-4.0.a  \'
echo '$$ITKLIBDIR/libitkjpeg-4.0.a  \'
echo '$$ITKLIBDIR/libITKIOJPEG-4.0.a  \'
echo '$$ITKLIBDIR/libitktiff-4.0.a  \'
echo '$$ITKLIBDIR/libITKIOTIFF-4.0.a  \'
echo '$$ITKLIBDIR/libITKIOLSM-4.0.a  \'
echo '$$ITKLIBDIR/libITKMetaIO-4.0.a  \'
echo '$$ITKLIBDIR/libITKIOMeta-4.0.a  \'
echo '$$ITKLIBDIR/libITKznz-4.0.a  \'
echo '$$ITKLIBDIR/libITKniftiio-4.0.a  \'
echo '$$ITKLIBDIR/libITKIONIFTI-4.0.a  \'
echo '$$ITKLIBDIR/libITKNrrdIO-4.0.a  \'
echo '$$ITKLIBDIR/libITKIONRRD-4.0.a  \'
echo '$$ITKLIBDIR/libitkpng-4.0.a  \'
echo '$$ITKLIBDIR/libITKIOPNG-4.0.a  \'
echo '$$ITKLIBDIR/libITKIOStimulate-4.0.a  \'
echo '$$ITKLIBDIR/libITKIOVTK-4.0.a  \'
echo '$$ITKLIBDIR/libITKMesh-4.0.a  \'
echo '$$ITKLIBDIR/libITKSpatialObjects-4.0.a  \'
echo '$$ITKLIBDIR/libITKPath-4.0.a  \'
echo '$$ITKLIBDIR/libITKLabelMap-4.0.a  \'
echo '$$ITKLIBDIR/libITKQuadEdgeMesh-4.0.a  \'
echo '$$ITKLIBDIR/libITKOptimizers-4.0.a  \'
echo '$$ITKLIBDIR/libITKPolynomials-4.0.a  \'
echo '$$ITKLIBDIR/libITKBiasCorrection-4.0.a  \'
echo '$$ITKLIBDIR/libITKBioCell-4.0.a  \'
echo '$$ITKLIBDIR/libITKDICOMParser-4.0.a  \'
echo '$$ITKLIBDIR/libITKIOXML-4.0.a  \'
echo '$$ITKLIBDIR/libITKIOSpatialObjects-4.0.a  \'
echo '$$ITKLIBDIR/libITKFEM-4.0.a  \'
echo '$$ITKLIBDIR/libITKIOIPL-4.0.a  \'
echo '$$ITKLIBDIR/libITKIOGE-4.0.a  \'
echo '$$ITKLIBDIR/libITKIOSiemens-4.0.a  \'
echo '$$ITKLIBDIR/libITKKLMRegionGrowing-4.0.a  \'
echo '$$ITKLIBDIR/libITKVTK-4.0.a  \'
echo '$$ITKLIBDIR/libITKWatersheds-4.0.a  \'
echo '$$ITKLIBDIR/libITKDeprecated-4.0.a  \'
echo '$$ITKLIBDIR/libITKgiftiio-4.0.a  \'
echo '$$ITKLIBDIR/libITKIOMesh-4.0.a  \'
echo '$$ITKLIBDIR/libitkhdf5_cpp-4.0.a  \'
echo '$$ITKLIBDIR/libitkhdf5-4.0.a  \'
echo '$$ITKLIBDIR/libITKIOCSV-4.0.a  \'
echo '$$ITKLIBDIR/libITKIOHDF5-4.0.a  \'
echo '$$ITKLIBDIR/libITKIOTransformBase-4.0.a  \'
echo '$$ITKLIBDIR/libITKIOTransformHDF5-4.0.a  \'
echo '$$ITKLIBDIR/libITKIOTransformInsightLegacy-4.0.a  \'
echo '$$ITKLIBDIR/libITKIOTransformMatlab-4.0.a  \'
echo '$$ITKLIBDIR/libITKOptimizersv4-4.0.a  \'
echo '$$ITKLIBDIR/libITKReview-4.0.a  \'
echo '$$ITKLIBDIR/libITKVideoCore-4.0.a  \'
echo '$$ITKLIBDIR/libITKVideoIO-4.0.a  \'
echo '$$ITKLIBDIR/libITKDICOMParser-4.0.a  \'
echo '$$ITKLIBDIR/libITKgiftiio-4.0.a  \'
echo '$$ITKLIBDIR/libITKIOBMP-4.0.a  \'
echo '$$ITKLIBDIR/libITKIOBioRad-4.0.a  \'
echo '$$ITKLIBDIR/libITKIOGDCM-4.0.a  \'
echo '$$ITKLIBDIR/libitkgdcmMSFF-4.0.a  \'
echo '$$ITKLIBDIR/libitkopenjpeg-4.0.a  \'
echo '$$ITKLIBDIR/libitkgdcmDICT-4.0.a  \'
echo '$$ITKLIBDIR/libitkgdcmIOD-4.0.a  \'
echo '$$ITKLIBDIR/libitkgdcmDSED-4.0.a  \'
echo '$$ITKLIBDIR/libitkgdcmCommon-4.0.a  \'
echo '$$ITKLIBDIR/libitkgdcmjpeg8-4.0.a  \'
echo '$$ITKLIBDIR/libitkgdcmjpeg12-4.0.a  \'
echo '$$ITKLIBDIR/libitkgdcmjpeg16-4.0.a  \'
echo '$$ITKLIBDIR/libitkgdcmuuid-4.0.a  \'
echo '$$ITKLIBDIR/libITKIOGIPL-4.0.a  \'
echo '$$ITKLIBDIR/libITKIOJPEG-4.0.a  \'
echo '$$ITKLIBDIR/libITKIOLSM-4.0.a  \'
echo '$$ITKLIBDIR/libITKIOTIFF-4.0.a  \'
echo '$$ITKLIBDIR/libitktiff-4.0.a  \'
echo '$$ITKLIBDIR/libitkjpeg-4.0.a  \'
echo '$$ITKLIBDIR/libITKIOMeta-4.0.a  \'
echo '$$ITKLIBDIR/libITKIONIFTI-4.0.a  \'
echo '$$ITKLIBDIR/libITKniftiio-4.0.a  \'
echo '$$ITKLIBDIR/libITKznz-4.0.a  \'
echo '$$ITKLIBDIR/libITKIONRRD-4.0.a  \'
echo '$$ITKLIBDIR/libITKNrrdIO-4.0.a  \'
echo '$$ITKLIBDIR/libITKIOPNG-4.0.a  \'
echo '$$ITKLIBDIR/libitkpng-4.0.a  \'
echo '$$ITKLIBDIR/libITKIOStimulate-4.0.a  \'
echo '$$ITKLIBDIR/libITKIOVTK-4.0.a  \'
echo '$$ITKLIBDIR/libITKLabelMap-4.0.a  \'
echo '$$ITKLIBDIR/libITKQuadEdgeMesh-4.0.a  \'
echo '$$ITKLIBDIR/libITKBiasCorrection-4.0.a  \'
echo '$$ITKLIBDIR/libITKPolynomials-4.0.a  \'
echo '$$ITKLIBDIR/libITKBioCell-4.0.a  \'
echo '$$ITKLIBDIR/libITKIOSpatialObjects-4.0.a  \'
echo '$$ITKLIBDIR/libITKIOXML-4.0.a  \'
echo '$$ITKLIBDIR/libITKEXPAT-4.0.a  \'
echo '$$ITKLIBDIR/libITKFEM-4.0.a  \'
echo '$$ITKLIBDIR/libITKMetaIO-4.0.a  \'
echo '$$ITKLIBDIR/libITKOptimizers-4.0.a  \'
echo '$$ITKLIBDIR/libITKIOSiemens-4.0.a  \'
echo '$$ITKLIBDIR/libITKIOGE-4.0.a  \'
echo '$$ITKLIBDIR/libITKIOIPL-4.0.a  \'
echo '$$ITKLIBDIR/libITKKLMRegionGrowing-4.0.a  \'
echo '$$ITKLIBDIR/libITKVTK-4.0.a  \'
echo '$$ITKLIBDIR/libITKWatersheds-4.0.a  \'
echo '$$ITKLIBDIR/libITKSpatialObjects-4.0.a  \'
echo '$$ITKLIBDIR/libITKMesh-4.0.a  \'
echo '$$ITKLIBDIR/libITKPath-4.0.a  \'
echo '$$ITKLIBDIR/libITKIOTransformHDF5-4.0.a  \'
echo '$$ITKLIBDIR/libitkhdf5_cpp-4.0.a  \'
echo '$$ITKLIBDIR/libitkhdf5-4.0.a  \'
echo '$$ITKLIBDIR/libitkzlib-4.0.a  \'
echo '$$ITKLIBDIR/libITKIOTransformInsightLegacy-4.0.a  \'
echo '$$ITKLIBDIR/libITKIOTransformMatlab-4.0.a  \'
echo '$$ITKLIBDIR/libITKIOTransformBase-4.0.a  \'
echo '$$ITKLIBDIR/libITKStatistics-4.0.a  \'
echo '$$ITKLIBDIR/libitkNetlibSlatec-4.0.a  \'
echo '$$ITKLIBDIR/libITKIOImageBase-4.0.a  \'
echo '$$ITKLIBDIR/libITKVideoCore-4.0.a  \'
echo '$$ITKLIBDIR/libITKCommon-4.0.a  \'
echo '$$ITKLIBDIR/libitksys-4.0.a  \'
echo '$$ITKLIBDIR/libITKVNLInstantiation-4.0.a  \'
echo '$$ITKLIBDIR/libitkvnl_algo-4.0.a  \'
echo '$$ITKLIBDIR/libitkv3p_lsqr-4.0.a  \'
echo '$$ITKLIBDIR/libitkvnl-4.0.a  \'
echo '$$ITKLIBDIR/libitkvcl-4.0.a  \'
echo '$$ITKLIBDIR/libitkv3p_netlib-4.0.a  '
fi > "${func_name}/${func_name}.pro"

echo "create ${func_name}/${func_name}_plugin.h ..."
if [ "1" ] ; then 
echo '/* '${func_name}'_plugin.h'
echo ' * this is '${func_name}' plugin'
echo ' * 12-02-08 : by Automatically'
echo ' */'
echo ' '
echo '#ifndef __ITKWATERSHEDIMAGEFILTER_PLUGIN_H__'
echo '#define __ITKWATERSHEDIMAGEFILTER_PLUGIN_H__'
echo ''
echo '#include <QtGui>'
echo '#include <v3d_interface.h>'
echo ''
echo 'class '${func_name}'Plugin : public QObject, public V3DPluginInterface2_1'
echo '{'
echo '	Q_OBJECT'
echo '	Q_INTERFACES(V3DPluginInterface2_1);'
echo ''
echo 'public:'
echo '	float getPluginVersion() const {return 1.1f;}'
echo ''
echo '	QStringList menulist() const;'
echo '	void domenu(const QString &menu_name, V3DPluginCallback2 &callback, QWidget *parent);'
echo ''
echo '	QStringList funclist() const ;'
echo '	bool dofunc(const QString &func_name, const V3DPluginArgList &input, V3DPluginArgList &output, V3DPluginCallback2 &callback, QWidget *parent);'
echo '};'
echo ''
echo '#endif'
echo ''
fi > ${func_name}/${func_name}_plugin.h

echo "create ${func_name}/${func_name}_plugin.cpp ..."
if [ "1" ] ; then 
echo '/* '${func_name}'_plugin.cpp'
echo ' * this is '${func_name}' plugin'
echo ' * 12-02-08 : by Automatically'
echo ' */'
echo ' '
echo '#include <vector>'
echo '#include <string>'
echo ''
echo '#include "v3d_message.h"'
echo ''
echo '#include "'${func_name}'_plugin.h"'
echo ' '
echo 'using namespace std;'
echo ''
echo 'int run_'${func_name}'(int argc, char ** argv);'
echo ''
echo 'Q_EXPORT_PLUGIN2('${func_name}', '${func_name}'Plugin);'
echo ' '
echo 'QStringList '${func_name}'Plugin::menulist() const'
echo '{'
echo '	return QStringList()'
echo '		<<tr("'${func_name}'");'
echo '		//<<tr("about");'
echo '}'
echo ''
echo 'QStringList '${func_name}'Plugin::funclist() const'
echo '{'
echo '	return QStringList()'
echo '		<<tr("'${func_name}'");'
echo '}'
echo ''
echo 'void '${func_name}'Plugin::domenu(const QString &menu_name, V3DPluginCallback2 &callback, QWidget *parent)'
echo '{'
echo '	if (menu_name == tr("'${func_name}'"))'
echo '	{'
echo '		//'${func_name}'(callback,parent);'
echo '	}'
echo '	else'
echo '	{'
echo '		v3d_msg(tr("this is '${func_name}' plugin. "'
echo '			"Create automatically, 12-02-08"));'
echo '	}'
echo '}'
echo ''
echo '#define INIT_ARGC_ARGV \'
echo '    vector<char*> * pinparas = (input.size() >= 2) ? (vector<char*> *)input.at(1).p : 0; \'
echo '    vector<char*> inparas; if(pinparas) inparas = *pinparas; \'
echo '	int argc = inparas.size() + 1; \'
echo '	char ** argv = new char*[argc]; \'
echo '	string fn_str = func_name.toStdString(); \'
echo '  argv[0] = (char*)(fn_str.c_str()); \'
echo '	for(int i = 0; i < argc - 1; i++) argv[i+1] = inparas[i]; '
echo ''
echo 'bool '${func_name}'Plugin::dofunc(const QString & func_name, const V3DPluginArgList & input, V3DPluginArgList & output, V3DPluginCallback2 & callback,  QWidget * parent)'
echo '{'
echo '	INIT_ARGC_ARGV;'
echo '	//argv[0] = fn_str.c_str(); '
echo ''
echo '	if (func_name == tr("'${func_name}'")) return run_'${func_name}'(argc, argv);'
echo ''
echo '	if(argv){delete [] argv;argv = 0;}'
echo '}'
echo ''
fi > ${func_name}/${func_name}_plugin.cpp

mkdir ${func_name}/ITKIOFactoryRegistration
echo "create ${func_name}/ITKIOFactoryRegistration/itkImageIOFactoryRegisterManager.h ..."
if [ "1" ] ; then 
echo '/*========================================================================='
echo ' *'
echo ' *  Copyright Insight Software Consortium'
echo ' *'
echo ' *  Licensed under the Apache License, Version 2.0 (the "License");'
echo ' *  you may not use this file except in compliance with the License.'
echo ' *  You may obtain a copy of the License at'
echo ' *'
echo ' *         http://www.apache.org/licenses/LICENSE-2.0.txt'
echo ' *'
echo ' *  Unless required by applicable law or agreed to in writing, software'
echo ' *  distributed under the License is distributed on an "AS IS" BASIS,'
echo ' *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.'
echo ' *  See the License for the specific language governing permissions and'
echo ' *  limitations under the License.'
echo ' *'
echo ' *=========================================================================*/'
echo ''
echo '#ifndef __itkImageIOFactoryRegisterManager_h'
echo '#define __itkImageIOFactoryRegisterManager_h'
echo ''
echo 'namespace itk {'
echo ''
echo 'class ImageIOFactoryRegisterManager'
echo '{'
echo '  public:'
echo '  ImageIOFactoryRegisterManager(void (*list[])(void))'
echo '    {'
echo '    for(;*list; ++list)'
echo '      {'
echo '      (*list)();'
echo '      }'
echo '    }'
echo '};'
echo ''
echo ''
echo '//'
echo '//  The following code is intended to be expanded at the end of the'
echo '//  itkImageFileReader.h and itkImageFileWriter.h files.'
echo '//'
echo 'void JPEGImageIOFactoryRegister__Private(void);void GDCMImageIOFactoryRegister__Private(void);void BMPImageIOFactoryRegister__Private(void);void LSMImageIOFactoryRegister__Private(void);void PNGImageIOFactoryRegister__Private(void);void TIFFImageIOFactoryRegister__Private(void);void VTKImageIOFactoryRegister__Private(void);void StimulateImageIOFactoryRegister__Private(void);void BioRadImageIOFactoryRegister__Private(void);void MetaImageIOFactoryRegister__Private(void);void NiftiImageIOFactoryRegister__Private(void);void NrrdImageIOFactoryRegister__Private(void);void GiplImageIOFactoryRegister__Private(void);void HDF5ImageIOFactoryRegister__Private(void);void MRCImageIOFactoryRegister__Private(void);'
echo ''
echo '//'
echo '// The code below registers available IO helpers using static initialization in'
echo '// application translation units. Note that this code will be expanded in the'
echo '// ITK-based applications and not in ITK itself.'
echo '//'
echo 'namespace {'
echo ''
echo '  void (*ImageIOFactoryRegisterRegisterList[])(void) = {'
echo '    JPEGImageIOFactoryRegister__Private,GDCMImageIOFactoryRegister__Private,BMPImageIOFactoryRegister__Private,LSMImageIOFactoryRegister__Private,PNGImageIOFactoryRegister__Private,TIFFImageIOFactoryRegister__Private,VTKImageIOFactoryRegister__Private,StimulateImageIOFactoryRegister__Private,BioRadImageIOFactoryRegister__Private,MetaImageIOFactoryRegister__Private,NiftiImageIOFactoryRegister__Private,NrrdImageIOFactoryRegister__Private,GiplImageIOFactoryRegister__Private,HDF5ImageIOFactoryRegister__Private,MRCImageIOFactoryRegister__Private,'
echo '    0};'
echo '  ImageIOFactoryRegisterManager ImageIOFactoryRegisterManagerInstance(ImageIOFactoryRegisterRegisterList);'
echo ''
echo '}'
echo ''
echo '}'
echo ''
echo '#endif'
fi > ${func_name}/ITKIOFactoryRegistration/itkImageIOFactoryRegisterManager.h

echo "create ${func_name}/ITKIOFactoryRegistration/itkTransformIOFactoryRegisterManager.h ..."
if [ "1" ] ; then 
echo '/*========================================================================='
echo ' *'
echo ' *  Copyright Insight Software Consortium'
echo ' *'
echo ' *  Licensed under the Apache License, Version 2.0 (the "License");'
echo ' *  you may not use this file except in compliance with the License.'
echo ' *  You may obtain a copy of the License at'
echo ' *'
echo ' *         http://www.apache.org/licenses/LICENSE-2.0.txt'
echo ' *'
echo ' *  Unless required by applicable law or agreed to in writing, software'
echo ' *  distributed under the License is distributed on an "AS IS" BASIS,'
echo ' *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.'
echo ' *  See the License for the specific language governing permissions and'
echo ' *  limitations under the License.'
echo ' *'
echo ' *=========================================================================*/'
echo ''
echo '#ifndef __itkTransformIOFactoryRegisterManager_h'
echo '#define __itkTransformIOFactoryRegisterManager_h'
echo ''
echo 'namespace itk {'
echo ''
echo 'class TransformIOFactoryRegisterManager'
echo '{'
echo '  public:'
echo '  TransformIOFactoryRegisterManager(void (*list[])(void))'
echo '    {'
echo '    for(;*list; ++list)'
echo '      {'
echo '      (*list)();'
echo '      }'
echo '    }'
echo '};'
echo ''
echo ''
echo '//'
echo '//  The following code is intended to be expanded at the end of the'
echo '//  itkTransformFileReader.h and itkTransformFileWriter.h files.'
echo '//'
echo 'void MatlabTransformIOFactoryRegister__Private(void);void TxtTransformIOFactoryRegister__Private(void);void HDF5TransformIOFactoryRegister__Private(void);'
echo ''
echo '//'
echo '// The code below registers available IO helpers using static initialization in'
echo '// application translation units. Note that this code will be expanded in the'
echo '// ITK-based applications and not in ITK itself.'
echo '//'
echo 'namespace {'
echo ''
echo '  void (*TransformIOFactoryRegisterRegisterList[])(void) = {'
echo '    MatlabTransformIOFactoryRegister__Private,TxtTransformIOFactoryRegister__Private,HDF5TransformIOFactoryRegister__Private,'
echo '    0};'
echo '  TransformIOFactoryRegisterManager TransformIOFactoryRegisterManagerInstance(TransformIOFactoryRegisterRegisterList);'
echo ''
echo '}'
echo ''
echo '}'
echo ''
echo '#endif'
fi > ${func_name}/ITKIOFactoryRegistration/itkTransformIOFactoryRegisterManager.h


cd ${func_name}
qmake 
make
mv lib${func_name}*.dylib ../
cd ..
rm -r ${func_name}
