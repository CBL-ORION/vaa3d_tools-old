SET(PLUGIN_GROUP_NAME "Superplugin_new_v1")

#CONFIGURE_V3D_PLUGIN(Superplugin)


##set the source and header files ##
SET(QtITK_SRCS
	SuperPlugin.cxx
	Dialog.cxx
	ItkPluginManager.cxx
	Pages.cxx	
  )

##files need to use moc (include Q_OBJECT)
QT4_WRAP_CPP(QT_MOC_SRCS
	SuperPlugin.h
	Dialog.h
	#ItkPluginManager.h
	Pages.h	
  )
##files need to use rcc(.qrc file)
QT4_ADD_RESOURCES(QT_QRC_SRCS
	superPluginIcons.qrc
	)
##function to deal with superPlugin
FUNCTION (CONFIGURE_V3D_MYSUPERPLUGIN plugin_name )# QtITK_SRCS QT_MOC_SRCS)
##add the temp file's direection#INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR})
INCLUDE_DIRECTORIES( ${CMAKE_SOURCE_DIR} )

ADD_LIBRARY(${plugin_name} SHARED ${QtITK_SRCS} ${QT_MOC_SRCS} ${QT_QRC_SRCS})
#TARGET_LINK_LIBRARIES(${plugin_name} ITKIOReview ITKIO  ITKNumerics ITKStatistics ITKAlgorithms V3DInterface V3DITKCommon ${QT_LIBRARIES} )

TARGET_LINK_LIBRARIES(${plugin_name} ${ITK_LIBRARIES} V3DInterface V3DITKCommon ${QT_LIBRARIES} )

SET(PLUGIN_GROUP_DIR ${INSTALLATION_DIRECTORY}/${PLUGIN_GROUP_NAME})
SET(PLUGIN_DIR ${PLUGIN_GROUP_DIR})
SET(PLUGIN_DESTINATION_DIR ${PLUGIN_DIR})

## mkdir the dir //and mv the plugin to the dir
FILE(MAKE_DIRECTORY ${PLUGIN_DIR})

IF (NOT WIN32)
INSTALL(TARGETS ${plugin_name}
  LIBRARY DESTINATION ${PLUGIN_DESTINATION_DIR} COMPONENT RuntimeLibraries
  PERMISSIONS OWNER_EXECUTE OWNER_WRITE OWNER_READ GROUP_EXECUTE GROUP_READ WORLD_EXECUTE WORLD_READ
  )
ENDIF(NOT WIN32)
IF (WIN32)
INSTALL(TARGETS ${plugin_name}
   DESTINATION ${PLUGIN_DESTINATION_DIR} COMPONENT RuntimeLibraries
  PERMISSIONS OWNER_EXECUTE OWNER_WRITE OWNER_READ GROUP_EXECUTE GROUP_READ WORLD_EXECUTE WORLD_READ
  )
ENDIF(WIN32)
IF(WIN32)
  SET(LIBRARY_BUILD_DIR ${LIBRARY_OUTPUT_PATH}/Release)

  MACRO(MAKE_WINDOWS_PATH pathname)
  # An extra \\ escape is necessary to get a \ through CMake's processing.
  STRING(REPLACE "/" "\\" ${pathname} "${${pathname}}")
  # Enclose with UNESCAPED quotes.  This means we need to escape our
  # quotes once here, i.e. with \"
  SET(${pathname} \"${${pathname}}\")
  ENDMACRO(MAKE_WINDOWS_PATH)
  
  SET(LIB_SOURCE ${LIBRARY_BUILD_DIR}/${CMAKE_SHARED_MODULE_PREFIX}${plugin_name}${CMAKE_SHARED_MODULE_SUFFIX})
  SET(LIB_DESTINATION ${PLUGIN_DESTINATION_DIR}/${CMAKE_SHARED_MODULE_PREFIX}${plugin_name}${CMAKE_SHARED_MODULE_SUFFIX})
  #change to native windows path
  MAKE_WINDOWS_PATH(LIB_SOURCE)
  MAKE_WINDOWS_PATH(LIB_DESTINATION)
  
  ADD_CUSTOM_COMMAND(
    SOURCE ${plugin_name}
    COMMAND ${CMAKE_COMMAND}
    ARGS -E copy ${LIB_SOURCE} ${LIB_DESTINATION}
    TARGET ${plugin_name}
	POST_BUILD
    OUTPUTS ${LIBRARY_DESTINATION_DIR}/${PLUG}${CMAKE_SHARED_MODULE_SUFFIX}
    )
ENDIF(WIN32)
IF (APPLE)

IF(NOT SOLVED_RPATH_ISSUE)

  SET(LIBRARY_BUILD_DIR ${LIBRARY_OUTPUT_PATH})

  #ADD_CUSTOM_COMMAND(
    #SOURCE ${plugin_name}
    #COMMAND ${CMAKE_COMMAND}
    #ARGS -E copy ${LIBRARY_BUILD_DIR}/${CMAKE_SHARED_MODULE_PREFIX}${plugin_name}.dylib ${PLUGIN_DESTINATION_DIR}/${CMAKE_SHARED_MODULE_PREFIX}${plugin_name}.dylib
    #TARGET ${plugin_name}
    #OUTPUTS ${LIBRARY_DESTINATION_DIR}/${PLUG}${CMAKE_SHARED_MODULE_SUFFIX}
    #)

ENDIF(NOT SOLVED_RPATH_ISSUE)
ENDIF(APPLE)

ENDFUNCTION(CONFIGURE_V3D_MYSUPERPLUGIN plugin_name)
#########end function ################
#compile the superPlugin
CONFIGURE_V3D_MYSUPERPLUGIN( SuperPlugin_new_v1 )# ${QtITK_SRCS} ${QT_MOC_SRCS})

#ADD_SUBDIRECTORY(test)   
