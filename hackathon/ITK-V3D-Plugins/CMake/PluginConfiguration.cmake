#
#  This file provides the standard configuration
#  for a generic plugin
#
#  The variable PLUGIN_GROUP_NAME is expected to
#  be pre-defined in every directory from where
#  you call this CONFIGURE_V3D_PLUGIN function.
#
#
FUNCTION(CONFIGURE_V3D_PLUGIN PLUGIN_NAME)

INCLUDE_DIRECTORIES( ${CMAKE_SOURCE_DIR} )

SET(QtITK_SRCS ${PLUGIN_NAME}.cxx )

QT4_WRAP_CPP(QT_MOC_SRCS ${PLUGIN_NAME}.h)

CONFIGURE_V3D_PLUGIN_COMMON(${PLUGIN_NAME})

ENDFUNCTION(CONFIGURE_V3D_PLUGIN)




#
#  Function equivalent to CONFIGURE_V3D_PLUGIN but for
#  plugins whose .h is trivial and can be generated
#  via C macros.
#
FUNCTION(CONFIGURE_V3D_PLUGIN_SIMPLE PLUGIN_NAME)

INCLUDE_DIRECTORIES( ${CMAKE_SOURCE_DIR} )

SET(QtITK_SRCS ${PLUGIN_NAME}.cxx )

CONFIGURE_V3D_PLUGIN_COMMON(${PLUGIN_NAME})

ENDFUNCTION(CONFIGURE_V3D_PLUGIN_SIMPLE)




FUNCTION(CONFIGURE_V3D_PLUGIN_COMMON PLUGIN_NAME)

ADD_LIBRARY(${PLUGIN_NAME} SHARED ${QtITK_SRCS} ${QT_MOC_SRCS})
#TARGET_LINK_LIBRARIES(${PLUGIN_NAME} ITKIOReview ITKIO  ITKNumerics ITKStatistics ITKAlgorithms V3DInterface V3DITKCommon ${QT_LIBRARIES} )

TARGET_LINK_LIBRARIES(${PLUGIN_NAME} ${ITK_LIBRARIES} V3DInterface V3DITKCommon ${QT_LIBRARIES} )

SET(PLUGIN_GROUP_DIR ${INSTALLATION_DIRECTORY}/${PLUGIN_GROUP_NAME} )
SET(PLUGIN_DESTINATION_DIR ${PLUGIN_GROUP_DIR}/${PLUGIN_NAME} )

FILE(MAKE_DIRECTORY ${PLUGIN_DESTINATION_DIR})
IF (NOT WIN32)
INSTALL(TARGETS ${PLUGIN_NAME}
  LIBRARY DESTINATION ${PLUGIN_DESTINATION_DIR} COMPONENT RuntimeLibraries
  PERMISSIONS OWNER_EXECUTE OWNER_WRITE OWNER_READ GROUP_EXECUTE GROUP_READ WORLD_EXECUTE WORLD_READ
  )
ENDIF(NOT WIN32)
IF (WIN32)
INSTALL(TARGETS ${PLUGIN_NAME}
   DESTINATION ${PLUGIN_DESTINATION_DIR} COMPONENT RuntimeLibraries
  PERMISSIONS OWNER_EXECUTE OWNER_WRITE OWNER_READ GROUP_EXECUTE GROUP_READ WORLD_EXECUTE WORLD_READ
  )
ENDIF(WIN32)


IF(WIN32)
  SET(LIBRARY_BUILD_DIR ${LIBRARY_OUTPUT_PATH}/Release)

  MACRO(MAKE_WINDOWS_PATH pathname)
  # An extra \\ escape is necessary to get a \ through CMake's processing.
  STRING(REPLACE "/" "\\" ${pathname} "${${pathname}}")
  # Enclose with UNESCAPED quotes.  This means we need to escape our
  # quotes once here, i.e. with \"
  SET(${pathname} \"${${pathname}}\")
  ENDMACRO(MAKE_WINDOWS_PATH)
  
  SET(LIB_SOURCE ${LIBRARY_BUILD_DIR}/${CMAKE_SHARED_MODULE_PREFIX}${PLUGIN_NAME}${CMAKE_SHARED_MODULE_SUFFIX})
  SET(LIB_DESTINATION ${PLUGIN_DESTINATION_DIR}/${CMAKE_SHARED_MODULE_PREFIX}${PLUGIN_NAME}${CMAKE_SHARED_MODULE_SUFFIX})
  #change to native windows path
  MAKE_WINDOWS_PATH(LIB_SOURCE)
  MAKE_WINDOWS_PATH(LIB_DESTINATION)
  
  ADD_CUSTOM_COMMAND(
    SOURCE ${PLUGIN_NAME}
    COMMAND ${CMAKE_COMMAND}
    ARGS -E copy ${LIB_SOURCE} ${LIB_DESTINATION}
    TARGET ${PLUGIN_NAME}
	POST_BUILD
    OUTPUTS ${LIBRARY_DESTINATION_DIR}/${PLUG}${CMAKE_SHARED_MODULE_SUFFIX}
    )
ENDIF(WIN32)
IF (APPLE)

IF(NOT SOLVED_RPATH_ISSUE)

  SET(LIBRARY_BUILD_DIR ${LIBRARY_OUTPUT_PATH})

  #ADD_CUSTOM_COMMAND(
    #SOURCE ${PLUGIN_NAME}
    #COMMAND ${CMAKE_COMMAND}
    #ARGS -E copy ${LIBRARY_BUILD_DIR}/${CMAKE_SHARED_MODULE_PREFIX}${PLUGIN_NAME}.dylib ${PLUGIN_DESTINATION_DIR}/${CMAKE_SHARED_MODULE_PREFIX}${PLUGIN_NAME}.dylib
    #TARGET ${PLUGIN_NAME}
    #OUTPUTS ${LIBRARY_DESTINATION_DIR}/${PLUG}${CMAKE_SHARED_MODULE_SUFFIX}
    #)

ENDIF(NOT SOLVED_RPATH_ISSUE)
ENDIF(APPLE)

ENDFUNCTION(CONFIGURE_V3D_PLUGIN_COMMON)
